{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e2c75a328b8c4d36e31d","webpack:///./src/lib/ECS/util/entityLoop.js","webpack:///./src/lib/ECS/Entity.js","webpack:///./src/lib/GameCanvas/GameCanvas.js","webpack:///./src/lib/ObjectPool/ObjectPool.js","webpack:///./src/lib/CanvasAPI/CanvasAPI.js","webpack:///./src/lib/ECS/Group.js","webpack:///./src/lib/GameCanvas/SelectedBox/SelectedBox.js","webpack:///./src/lib/GameCanvas/selectionUtils/getShapesFromClick.js","webpack:///./src/lib/GameCanvas/selectionUtils/getShapesInSelectionBox.js","webpack:///./src/lib/GameCanvas/selectionUtils/isPosInsideCircle.js","webpack:///external \"react\"","webpack:///./src/index.js"],"names":["entities","fn","ents","forEach","ent","push","Object","keys","entID","spliceOne","arr","index","idx","len","length","Entity","classRef","counter","id","constructor","components","group","component","name","compName","Group","indexGroup","groupKey","groups","indexOf","hasComponents","assignGroup","newGroup","copyArray","array","extendGroup","comp","compInGroup","entHasReqComps","removeComponent","compNames","reduce","agg","getByComps","type","getGroup","concat","reset","entity","destroy","window","GameCanvas","options","selectedBoxColor","mapHeight","mapWidth","viewHeight","viewWidth","onViewMapClick","onViewMapMove","lastClick","dbClick","lastTap","selectedBox","SelectedBox","updateViewMapCursorPosition","bind","updateMiniMapCursorPosition","handleMapMouseUp","handleMapMouseDown","handleMiniMapClick","handleMapMouseMove","handleMapMouseLeave","handleTouchMove","handleTouchStart","handleMapTouchEnd","handleMiniMapTouchStart","event","canvas","canvasAPI","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","Math","max","round","width","getPan","panX","height","panY","isMouseDown","setEnd","viewMapX","viewMapY","data","getData","mapAPI","addRect","start","strokeStyle","selectedData","hits","end","shapes","dbTap","updateCursorPosition","viewMapCanvas","miniMapCanvas","miniMapAPI","miniMapX","miniMapY","getMapRef","getMiniRef","map","generateMapCanvas","minimap","generateMiniMapCanvas","calcPanX","calcPanY","pan","updateMiniMapSquare","lineWidth","now","Date","getTime","setSelectBox","setStart","e","touches","preventDefault","xMoved","yMoved","min","getRef","el","document","removeEventListener","addEventListener","CanvasAPI","getContext","key","setInterval","clearInterval","ObjectPool","PooledClass","incrementWhenEmpty","freePool","stats","free","used","amount","count","generate","obj","pop","object","Shape","draw","metaData","ctx","defaultStrokeStyle","Map","delete","image","cropStartX","cropStartY","cropSizeX","cropSizeY","rotation","set","beginPath","save","translate","rotate","drawImage","restore","closePath","stroke","radius","fillColor","moveTo","arc","PI","fillStyle","fill","setTransform","text","font","textBaseline","fillText","clearRect","values","shape","prototype","addImage","generateGroupKey","names","toLowerCase","sort","join","compArray","assign","getWidth","getHeight","getShapesFromClick","shapeMetaData","shapeX","shapeY","getShapesInSelectionBox","minX","maxX","minY","maxY","centerX","centerY","isPosInsideCircle","pow","entityLoop"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"react\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_10__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e2c75a328b8c4d36e31d","/**\n * used to loop over and possibly filter entities\n * Accepts either a map of Entities with EntitiyID as Key, or an array\n * if the CB returns true, an array of entities that return true is returned.\n * @param entities\n * @param fn\n * @returns {Array}\n */\nexport default (entities, fn) => {\n  let ents = [];\n\n  if (entities.forEach) {\n    entities.forEach((ent) => {\n      fn(ent) && ents.push(ent);\n    });\n  } else {\n    Object.keys(entities).forEach((entID) => {\n      fn(entities[entID]) && ents.push(entities[entID]);\n    });\n  }\n\n  return ents;\n};\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ECS/util/entityLoop.js","import Group from './Group';\nimport entityLoop from './util/entityLoop';\n\nexport let spliceOne = function(arr, index = 0) {\n  let idx = index;\n  let len = arr.length;\n  if (!len || idx >= len) {\n    return;\n  }\n\n  while (idx < len) {\n    arr[idx] = arr[idx + 1];\n    idx++;\n  }\n  arr.length--;\n};\n\n\n/**\n * Entity class to a static interface\n *\n * entity.addComponent(Component component)\n *\n */\n\n\nclass Entity {\n  constructor(classRef) {\n    Entity.counter++;\n    this.id = Entity.counter;\n    this.constructor = classRef;\n    this.components = {};\n    Entity.entities[this.id] = this;\n  }\n\n  assignGroup(group) {\n    group.entities[this.id] = this;\n  }\n\n  // A component is added\n  // we create a new group index, for exm\n  addComponent(component) {\n    this.components[component.name] = component;\n    this[component.name] = component;\n    // creates an index group if it does not exist..\n\n    let arr = [];\n    for (let compName in this.components) {\n      arr.push(compName);\n    }\n    Group.indexGroup(arr, Entity.entities);\n\n    // we need to see if we need to add entity into other groups.\n    for (let groupKey in Group.groups) {\n      let group = Group.groups[groupKey];\n      // if the ent is in this group, skip.\n      if (group.entities[this.id]) {\n        continue;\n      }\n      // if the component is not in this group, skip.\n      if (group.components.indexOf(component.name) === -1) {\n        continue;\n      }\n      // if this ent does not have all the other comps, skip..\n      if (this.hasComponents(group.components)) {\n        this.assignGroup(group);\n        let newGroup = this.copyArray(group);\n        group.array = this.extendGroup(newGroup);\n      }\n    }\n  }\n\n  // that's not really copying the array now is it?\n  copyArray(group) {\n    return group.array;\n  }\n\n  extendGroup(newGroup) {\n    newGroup[newGroup.length] = this;\n    return newGroup;\n  }\n\n  // mixed, an actual component or just component name\n  removeComponent(comp) {\n    let component = this.components[comp] || comp;\n    let compName = component.name;\n\n    // we need to see if we need to remove entity from other groups\n    for (let groupKey in Group.groups) {\n      let group = Group.groups[groupKey];\n      // if the ent is in this group, skip.\n\n      let compInGroup = group.components.indexOf(component.name) > -1;\n      let entHasReqComps = this.hasComponents(group.components);\n\n      // if this ent does not have all the other comps, skip..\n      if (group.entities[this.id] && compInGroup && entHasReqComps) {\n        delete group.entities[this.id];\n        spliceOne(group.array, group.array.indexOf(this));\n      }\n    }\n\n    delete this.components[compName];\n    delete this[compName];\n  }\n\n  /**\n   * Destroying an entity means removing all its components and deleting it from the Entity Object\n   */\n  destroy() {\n    Object.keys(this.components).forEach((compName) => {\n      this.removeComponent(this.components[compName]);\n    });\n    delete Entity.entities[this.id];\n  }\n\n  hasComponents(components = []) {\n    // quick breakout\n    if (this.components[components]) {\n      return true;\n    }\n\n    let compNames = components.reduce ? components : [components];\n\n    return compNames.reduce((agg, compName) => {\n      return agg && !!this.components[compName];\n    }, true);\n  }\n}\n\nEntity.entities = {};\n\n/**\n * @param components\n * @param type 'array'|'map'\n * @return return array/map\n */\nEntity.getByComps = (components, type = 'array') => {\n  let compNames = components.reduce ? components : [components];\n  Group.indexGroup(components, Entity.entities);\n  let group = Group.getGroup(compNames);\n  return type === 'map' ? group.entities : group.array.concat();\n};\n\nEntity.reset = () => {\n  entityLoop(Entity.entities, (entity) => {\n    entity.destroy();\n  });\n  Group.reset();\n};\n\nEntity.counter = 0;\n\nwindow.Entity = Entity;\nexport default Entity;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ECS/Entity.js","import React from 'react';\nimport CanvasAPI from 'lib/CanvasAPI/CanvasAPI';\nimport SelectedBox from './SelectedBox/SelectedBox';\nimport getShapesFromClick from './selectionUtils/getShapesFromClick';\nimport getShapesInSelectionBox from './selectionUtils/getShapesInSelectionBox';\n\nclass GameCanvas {\n  constructor(options) {\n    this.selectedBoxColor = options.selectedBoxColor || 'blue';\n    this.mapHeight = options.mapHeight;\n    this.mapWidth = options.mapWidth;\n    this.viewHeight = options.viewHeight;\n    this.viewWidth = options.viewWidth;\n    this.onViewMapClick = options.onViewMapClick;\n    this.onViewMapMove = options.onViewMapMove;\n    this.lastClick = 0;\n    this.dbClick = false;\n    this.lastTap = 0;\n    this.lastClick = false;\n    this.selectedBox = new SelectedBox();\n    this.updateViewMapCursorPosition = this.updateViewMapCursorPosition.bind(this);\n    this.updateMiniMapCursorPosition = this.updateMiniMapCursorPosition.bind(this);\n    this.handleMapMouseUp = this.handleMapMouseUp.bind(this);\n    this.handleMapMouseDown = this.handleMapMouseDown.bind(this);\n    this.handleMiniMapClick = this.handleMiniMapClick.bind(this);\n    this.handleMapMouseMove = this.handleMapMouseMove.bind(this);\n    this.handleMapMouseLeave = this.handleMapMouseLeave.bind(this);\n    this.handleTouchMove = this.handleTouchMove.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleMapTouchEnd = this.handleMapTouchEnd.bind(this);\n    this.handleMiniMapTouchStart = this.handleMiniMapTouchStart.bind(this);\n  }\n\n  updateCursorPosition(event, canvas, canvasAPI) {\n    let rect = canvas.getBoundingClientRect();\n    // base position\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n\n    x = Math.max(0, Math.round(x * (canvas.width / rect.width))) - canvasAPI.getPan().panX;\n    y = Math.max(0, Math.round(y * (canvas.height / rect.height))) - canvasAPI.getPan().panY;\n\n    return {x, y};\n  }\n\n  handleMapMouseMove() {\n    if (this.isMouseDown) {\n      this.selectedBox.setEnd(this.viewMapX, this.viewMapY);\n\n      let data = this.selectedBox.getData();\n\n      this.mapAPI.addRect({\n        id: 'selectedBox',\n        x: data.start.x,\n        y: data.start.y,\n        width: data.width,\n        height: data.height,\n        strokeStyle: this.selectedBoxColor\n      });\n    }\n\n    this.onViewMapMove({\n      x: this.viewMapX,\n      y: this.viewMapY,\n      isMouseDown: this.isMouseDown,\n      dbClick: this.dbClick,\n      selectedBox: this.selectedBox.getData()\n    });\n  }\n\n  handleMapMouseLeave() {\n    if (this.isMouseDown) {\n      this.handleMapMouseUp();\n    }\n  }\n\n  handleMapTouchEnd() {\n    this.isMouseDown = false;\n\n    let selectedData = this.selectedBox.getData();\n\n    let hits = [];\n    // if a single click...\n    if (selectedData.end.x === selectedData.start.x) {\n      let x = selectedData.end.x;\n      let y = selectedData.end.y;\n      hits = getShapesFromClick(this.mapAPI.shapes, x, y);\n    } else {\n      hits = getShapesInSelectionBox(this.mapAPI.shapes, selectedData);\n    }\n\n    this.mapAPI.addRect({\n      id: 'selectedBox',\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    });\n\n    this.onViewMapClick({\n      x: this.viewMapX,\n      y: this.viewMapY,\n      isMouseDown: this.isMouseDown,\n      dbClick: this.dbTap || this.dbClick,\n      selectedBox: selectedData,\n      hits\n    });\n    this.selectedBox.reset();\n  }\n\n  handleMapMouseUp() {\n    if (!this.lastTap) {\n      this.handleMapTouchEnd();\n    }\n  }\n\n\n  updateViewMapCursorPosition(event) {\n    let {x, y} = this.updateCursorPosition(event, this.viewMapCanvas, this.mapAPI);\n    this.viewMapX = x;\n    this.viewMapY = y;\n  }\n\n  updateMiniMapCursorPosition(event) {\n    let {x, y} = this.updateCursorPosition(event, this.miniMapCanvas, this.miniMapAPI);\n    this.miniMapX = x;\n    this.miniMapY = y;\n  }\n\n  getNewCanvasPairs({getMapRef, getMiniRef}) {\n    return {\n      map: this.generateMapCanvas(getMapRef),\n      minimap: this.generateMiniMapCanvas(getMiniRef)\n    };\n  }\n\n  handleMiniMapClick() {\n    let x = this.miniMapX;\n    let y = this.miniMapY;\n    // Handle negative overflows, both numbers should be positive\n    // the reason we divide in 2 is because we want to center the view\n    let calcPanX = Math.max(x - this.viewWidth / 2, 0);\n    let calcPanY = Math.max(y - this.viewHeight / 2, 0);\n\n    // Handle positive overflows, both numbers should not exceed map size\n    let width = this.mapWidth;\n    let height = this.mapHeight;\n\n    calcPanX = calcPanX + this.viewWidth < width ? calcPanX : width - this.viewWidth;\n    calcPanY = calcPanY + this.viewHeight < height ? calcPanY : height - this.viewHeight;\n\n    this.mapAPI.pan(-calcPanX, -calcPanY);\n\n    // draw the minimap square box\n    this.updateMiniMapSquare();\n  }\n\n  updateMiniMapSquare() {\n    this.miniMapAPI.addRect({\n      id: 'currentMap',\n      x: -this.mapAPI.getPan().panX,\n      y: -this.mapAPI.getPan().panY,\n      width: this.viewWidth,\n      height: this.viewHeight,\n      strokeStyle: 'green',\n      lineWidth: 20\n    });\n  }\n\n  handleMapMouseDown() {\n    if (!this.lastTap) {\n      let now = new Date().getTime();\n      this.dbClick = (now - this.lastClick) < 300;\n      this.lastClick = now;\n      this.isMouseDown = true;\n      this.setSelectBox();\n    }\n  }\n\n  setSelectBox() {\n    this.selectedBox.setStart(this.viewMapX, this.viewMapY);\n    this.selectedBox.setEnd(this.viewMapX, this.viewMapY);\n  }\n\n  handleTouchStart(e) {\n    let {x, y} = this.updateCursorPosition(e.touches[0], this.viewMapCanvas, this.mapAPI);\n    let now = new Date().getTime();\n\n    this.dbTap = (now - this.lastTap) < 300;\n    this.lastTap = now;\n\n    this.viewMapX = x;\n    this.viewMapY = y;\n\n    this.setSelectBox();\n  }\n\n  handleMiniMapTouchStart(e) {\n    let {x, y} = this.updateCursorPosition(e.touches[0], this.miniMapCanvas, this.miniMapAPI);\n\n    this.miniMapX = x;\n    this.miniMapY = y;\n\n    this.handleMiniMapClick();\n  }\n\n\n  handleTouchMove(e) {\n    e.preventDefault();\n    let {x, y} = this.updateCursorPosition(e.touches[0], this.viewMapCanvas, this.mapAPI);\n\n    let calcPanX;\n    let calcPanY;\n    let {panX, panY} = this.mapAPI.getPan();\n\n    let xMoved = x - this.viewMapX;\n    let yMoved = y - this.viewMapY;\n\n    calcPanX = panX + xMoved;\n    calcPanY = panY + yMoved;\n\n    // both numbers should be negative\n    calcPanX = Math.min(calcPanX, 0);\n    calcPanY = Math.min(calcPanY, 0);\n\n    // the panning + the mapSize, should not exceed the viewSize\n    let width = this.mapWidth;\n    let height = this.mapHeight;\n    calcPanX = -calcPanX + this.viewWidth < width ? calcPanX : this.viewWidth - width;\n    calcPanY = -calcPanY + this.viewHeight < height ? calcPanY : this.viewHeight - height;\n\n    this.mapAPI.pan(calcPanX, calcPanY);\n  }\n\n  generateMapCanvas(getRef) {\n    return (\n      <canvas\n        className=\"viewMap\"\n        ref={(el) => {\n          if (!el) {\n            return null;\n          }\n          this.viewMapCanvas = el;\n          document.removeEventListener('mousemove', this.updateViewMapCursorPosition);\n          document.addEventListener('mousemove', this.updateViewMapCursorPosition);\n          el.removeEventListener('touchmove', this.handleTouchMove, false);\n          el.addEventListener('touchmove', this.handleTouchMove, false);\n\n          this.mapAPI = new CanvasAPI(el.getContext('2d'));\n          getRef(this.mapAPI, el);\n        }}\n        height={this.viewHeight}\n        width={this.viewWidth}\n        onMouseDown={this.handleMapMouseDown}\n        onTouchStart={this.handleTouchStart}\n        onTouchEnd={this.handleMapTouchEnd}\n        onMouseMove={this.handleMapMouseMove}\n        onMouseUp={this.handleMapMouseUp}\n        onMouseLeave={this.handleMapMouseLeave}\n      ></canvas>\n    );\n  }\n\n  generateMiniMapCanvas(getRef) {\n    return (\n      <canvas\n        className=\"minimap\"\n        ref={(el) => {\n          if (!el) {\n            return null;\n          }\n          this.miniMapCanvas = el;\n          document.removeEventListener('mousemove', this.updateMiniMapCursorPosition);\n          document.addEventListener('mousemove', this.updateMiniMapCursorPosition);\n\n          this.miniMapAPI = new CanvasAPI(el.getContext('2d'));\n          // inits the minimap square\n          // so this assumes that there's ALREADy a mapAPI\n          // bad assumption....\n\n          let key = setInterval(() => {\n            if (this.mapAPI) {\n              this.updateMiniMapSquare();\n              clearInterval(key);\n            }\n          }, 100);\n\n          getRef(this.miniMapAPI, el);\n        }}\n        height={this.mapHeight}\n        width={this.mapWidth}\n        onMouseDown={this.handleMiniMapClick}\n        onTouchStart={this.handleMiniMapTouchStart}\n      ></canvas>\n    );\n  }\n}\n\nexport default GameCanvas;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/GameCanvas/GameCanvas.js","class ObjectPool {\n  constructor(PooledClass, incrementWhenEmpty = 10) {\n    this.type = PooledClass;\n    this.freePool = [];\n    this.stats = {\n      free: 0,\n      used: 0\n    };\n    this.incrementWhenEmpty = incrementWhenEmpty;\n  }\n\n  reset() {\n    this.freePool = [];\n    this.stats = {\n      free: 0,\n      used: 0\n    };\n  }\n\n  // Ensures the pool has at least $amount of free objects\n  generate(amount) {\n    let count = amount - this.stats.free > 0 ? amount - this.stats.free : 0;\n    // generate a gazzilion fighters?\n    while (count > 0) {\n      this.freePool.push(new this.type());\n      count--;\n    }\n    this.stats.free = this.freePool.length;\n  }\n\n  // acquires an object, marks it as 'used'.\n  acquire() {\n    if (this.freePool.length === 0) {\n      this.generate(this.incrementWhenEmpty);\n    }\n    let obj = this.freePool.pop();\n    this.stats.free = this.freePool.length;\n    return obj;\n  }\n\n  // releases an object, marks it as free\n  release(object) {\n    // prevent release twice\n    if (this.freePool.indexOf(object) === -1) {\n      this.freePool.push(object);\n      this.stats.free = this.freePool.length;\n    }\n  }\n}\n\nexport default ObjectPool;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ObjectPool/ObjectPool.js","/**\n * Library for working with Canvas,\n * Works by using a 2D context as an argument\n * Provides abstraction for some common shapes in Canvas\n */\n\n\n\nexport class Shape {\n  constructor(draw, metaData) {\n    this.draw = draw;\n    this.metaData = metaData;\n  }\n}\n\nclass CanvasAPI {\n  constructor(ctx, strokeStyle = 'white') {\n    this.ctx = ctx;\n    this.defaultStrokeStyle = strokeStyle;\n    ctx.strokeStyle = strokeStyle;\n    this.shapes = new Map();\n  }\n\n  /**\n   * Clears all the shapes\n   */\n  clear() {\n    this.shapes = new Map();\n  }\n\n  /**\n   * Removes a shape by its ID\n   * @param id\n   */\n  remove(id) {\n    this.shapes.delete(id);\n  }\n\n\n  /* istanbul ignore next */\n  addImage({\n    id,\n    image, // the image to display\n    x, y, // pos for x,y..\n    height, width,\n    cropStartX, cropStartY, cropSizeX, cropSizeY,\n    rotation // in radians\n  }) {\n    let ctx = this.ctx;\n    this.shapes.set(id, new Shape(() => {\n      ctx.beginPath();\n      ctx.save();\n      ctx.translate(x + width / 2, y + height / 2);\n      ctx.rotate(rotation);\n      ctx.drawImage(image,\n        cropStartX, cropStartY, cropSizeX, cropSizeY,\n        -width / 2, -height / 2,  // pos in canvas // at the top left of the canvas\n        width, height); // size in canvas\n      ctx.restore();\n      ctx.closePath();\n    }, {\n      id,\n      type: 'image',\n      x,\n      y,\n      height,\n      width\n    }));\n  }\n\n  addRect({id, x, y, width, height, strokeStyle, lineWidth}) {\n    let ctx = this.ctx;\n    this.shapes.set(id, new Shape(() => {\n      ctx.strokeStyle = strokeStyle;\n      ctx.lineWidth = lineWidth;\n      ctx.beginPath();\n      ctx.rect(\n        x,\n        y,\n        width,\n        height\n      );\n      ctx.stroke();\n      ctx.closePath();\n    }, {\n      id,\n      type: 'rect',\n      x,\n      y,\n      height,\n      width\n    }));\n  }\n\n  addCircle({id, x, y, radius, strokeStyle, lineWidth, fillColor}) {\n    let ctx = this.ctx;\n    this.shapes.set(id, new Shape(() => {\n      ctx.strokeStyle = strokeStyle;\n      ctx.lineWidth = lineWidth;\n      ctx.moveTo(x, y);\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, Math.PI * 2);\n      if (fillColor) {\n        ctx.fillStyle = fillColor;\n        ctx.fill();\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }, {\n      id,\n      type: 'circle',\n      x,\n      y,\n      radius\n    }));\n  }\n\n  /**\n   * Method allows us to pan around the canvas\n   */\n  pan(x, y) {\n    this.panX = x;\n    this.panY = y;\n    this.ctx.setTransform(1, 0, 0, 1, x, y);\n  }\n\n  getPan() {\n    return {\n      panX : this.panX || 0,\n      panY : this.panY || 0\n    };\n  }\n\n  write({id, text, x, y, font, textBaseline, fillStyle}) {\n    this.shapes.set(id, new Shape(() => {\n      this.ctx.beginPath();\n      this.ctx.font = font;\n      this.ctx.textBaseline = textBaseline;\n      this.ctx.fillStyle = fillStyle;\n      this.ctx.fillText(text, x, y);\n      this.ctx.closePath();\n    }, {\n      id,\n      x,\n      y\n    }));\n  }\n\n  draw() {\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n\n    for (let shape of this.shapes.values()) {\n      shape.draw();\n      this.ctx.strokeStyle = this.defaultStrokeStyle;\n    }\n  }\n}\n\n// adding an image causes segmentation fault for some reason :)\n/* istanbul ignore next */\nif (process.env.NODE_ENV === 'test') {\n  CanvasAPI.prototype.addImage = () => {};\n}\nexport default CanvasAPI;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/CanvasAPI/CanvasAPI.js","import entityLoop from './util/entityLoop';\n\n\nclass Group {\n  constructor(components, entities = {}) {\n    this.components = components;\n    this.entities = entities;\n    this.array = [];\n  }\n}\n\nGroup.groups = {};\n\nGroup.reset = () => {\n  Group.groups = {};\n};\n\nGroup.generateGroupKey = (components) => {\n  let names = [];\n  for (let count = 0; count < components.length; count++) {\n    let name = components[count];\n    names.push(name);\n  }\n\n  return names\n    .map((x) => {\n      return x.toLowerCase();\n    })\n    .sort()\n    .join('-');\n};\n\nGroup.getGroup = (components) => {\n  let key = Group.generateGroupKey(components);\n  return Group.groups[key] || {};\n};\n\n// this will create a new index group for the provided components.\nGroup.indexGroup = (components, entities) => {\n  let compArray = components.reduce ? components : [components];\n\n  let key = Group.generateGroupKey(compArray);\n\n  let group;\n\n  if (Group.groups[key]) {\n    return;\n  } else {\n    group = Group.groups[key] = new Group(compArray);\n  }\n\n  // insert the provided entities into this group...\n  entityLoop(entities, (entity) => {\n    if (entity.hasComponents(compArray)) {\n      group.entities[entity.id] = entity;\n      group.array = [...group.array, entity];\n    }\n  });\n\n  return group;\n};\n\nexport default Group;\n\n// life cycle of a group!\n\n// 1. Adding a component adds a group with that one component.\n// 2. Adding 2nd component creates a group with that 2nd component\n// 3. Querying for a list of components should create an group for that list, one off.\n// 4. Adding and removing components will update the above lists as needed.\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ECS/Group.js","/**\n * Class that represents the current selected area by the user\n * Populated when the user click, holds and move the mouse\n */\nclass SelectedBox {\n  constructor() {\n    this.reset();\n  }\n\n  reset() {\n    this.start = {\n      x: 0,\n      y: 0\n    };\n    this.end = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  getData() {\n    return {\n      start : Object.assign({}, this.start),\n      end : Object.assign({}, this.end),\n      width : this.getWidth(),\n      height : this.getHeight()\n    };\n  }\n\n  getHeight() {\n    return this.end.y - this.start.y;\n  }\n\n  getWidth() {\n    return this.end.x - this.start.x;\n  }\n\n  setStart(x, y) {\n    this.start.x = x;\n    this.start.y = y;\n  }\n\n  setEnd(x, y) {\n    this.end.x = x;\n    this.end.y = y;\n  }\n}\n\nexport default SelectedBox;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/GameCanvas/SelectedBox/SelectedBox.js","import isPosInsideCircle from './isPosInsideCircle';\n\n\n/**\n * Function used for getting all shapes hit from a single click (not from a selection box)\n */\nfunction getShapesFromClick(shapes, x, y) {\n  let hits = [];\n\n  shapes.forEach((shape, id) => {\n    let shapeMetaData = shape.metaData;\n    let shapeX      = shapeMetaData.x;\n    let shapeY      = shapeMetaData.y;\n    let radius = shapeMetaData.radius;\n    let type   = shapeMetaData.type;\n\n\n    if (type === 'circle' && isPosInsideCircle(x, y, shapeX, shapeY, radius)) {\n      hits.push(id);\n    } else if (type !== 'circle') {\n      // do nothing, no support for non circles\n    }\n  });\n\n  return hits;\n}\n\nexport default getShapesFromClick;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/GameCanvas/selectionUtils/getShapesFromClick.js","function getShapesInSelectionBox(shapes, selectedData) {\n  let minX = Math.min(selectedData.start.x, selectedData.end.x);\n  let maxX = Math.max(selectedData.start.x, selectedData.end.x);\n  let minY = Math.min(selectedData.start.y, selectedData.end.y);\n  let maxY = Math.max(selectedData.start.y, selectedData.end.y);\n\n\n  let hits = [];\n  shapes.forEach((shape, id) => {\n    let shapeMetaData = shape.metaData;\n    let shapeX      = shapeMetaData.x;\n    let shapeY      = shapeMetaData.y;\n    let type   = shapeMetaData.type;\n\n    if (type === 'circle') {\n      let centerX = shapeX;\n      let centerY = shapeY;\n      if (centerX >= minX && centerX <= maxX && centerY >= minY && centerY <= maxY) {\n        hits.push(id);\n      }\n    } else {\n      // do nothing, no support for non circles\n    }\n  });\n\n  return hits;\n}\n\nexport default getShapesInSelectionBox;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/GameCanvas/selectionUtils/getShapesInSelectionBox.js","/**\n * Utility function to detect if a point is inside a circle\n * @param x\n * @param y\n * @param centerX\n * @param centerY\n * @param radius\n * @return {boolean}\n */\nfunction isPosInsideCircle(x, y, centerX, centerY, radius) {\n  return Math.pow((x - centerX), 2) + Math.pow((y - centerY), 2) < Math.pow(radius, 2);\n}\n\nexport default isPosInsideCircle;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/GameCanvas/selectionUtils/isPosInsideCircle.js","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 10\n// module chunks = 0","import Entity from 'lib/ECS/Entity';\nimport entityLoop from 'lib/ECS/util/entityLoop';\nimport ObjectPool from 'lib/ObjectPool/ObjectPool';\nimport GameCanvas from 'lib/GameCanvas/GameCanvas';\n\nexport default {\n  Entity,\n  entityLoop,\n  ObjectPool,\n  GameCanvas\n};\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}