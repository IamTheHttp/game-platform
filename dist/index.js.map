{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///./src/lib/ECS/util/entityLoop.js","webpack:///./src/lib/ECS/Group.js","webpack:///./src/lib/ECS/Entity.js","webpack:///./src/lib/ObjectPool/ObjectPool.js","webpack:///./src/lib/CanvasAPI/CanvasAPI.js","webpack:///./src/lib/GameCanvas/SelectedBox/SelectedBox.js","webpack:///./src/lib/GameCanvas/selectionUtils/isPosInsideCircle.js","webpack:///./src/lib/GameCanvas/selectionUtils/getShapesFromClick.js","webpack:///./src/lib/GameCanvas/selectionUtils/getShapesInSelectionBox.js","webpack:///./src/lib/GameCanvas/GameCanvas.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","require","define","amd","a","i","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","m","entities","fn","ents","forEach","ent","push","Object","keys","entID","Group","components","this","array","groups","reset","generateGroupKey","names","count","length","name","map","x","toLowerCase","sort","join","getGroup","key","indexGroup","group","compArray","reduce","entityLoop","entity","hasComponents","id","spliceOne","arr","idx","len","Entity","classRef","counter","constructor","component","compName","groupKey","indexOf","assignGroup","newGroup","copyArray","extendGroup","comp","compInGroup","entHasReqComps","removeComponent","agg","getByComps","type","compNames","concat","destroy","ObjectPool","PooledClass","incrementWhenEmpty","freePool","stats","free","used","amount","generate","obj","pop","object","Shape","draw","metaData","CanvasAPI","ctx","strokeStyle","defaultStrokeStyle","shapes","Map","image","y","height","width","cropStartX","cropStartY","cropSizeX","cropSizeY","rotation","set","beginPath","save","translate","rotate","drawImage","restore","closePath","lineWidth","rect","stroke","radius","fillColor","moveTo","arc","Math","PI","fillStyle","fill","panX","panY","setTransform","text","font","textBaseline","fillText","clearRect","canvas","values","SelectedBox","start","end","assign","getWidth","getHeight","isPosInsideCircle","centerX","centerY","pow","getShapesFromClick","hits","shape","shapeMetaData","shapeX","shapeY","getShapesInSelectionBox","selectedData","minX","min","maxX","max","minY","maxY","GameCanvas","options","selectedBoxColor","mapHeight","mapWidth","viewHeight","viewWidth","onViewMapClick","onViewMapMove","lastClick","dbClick","lastTap","selectedBox","updateViewMapCursorPosition","bind","updateMiniMapCursorPosition","handleMapMouseUp","handleMapMouseDown","handleMiniMapClick","handleMapMouseMove","handleMapMouseLeave","handleTouchMove","handleTouchStart","handleMapTouchEnd","handleMiniMapTouchStart","event","canvasAPI","getBoundingClientRect","clientX","left","clientY","top","round","getPan","isMouseDown","setEnd","viewMapX","viewMapY","data","getData","mapAPI","addRect","dbTap","updateCursorPosition","viewMapCanvas","miniMapCanvas","miniMapAPI","miniMapX","miniMapY","getMapRef","getMiniRef","generateMapCanvas","minimap","generateMiniMapCanvas","calcPanX","calcPanY","pan","updateMiniMapSquare","now","Date","getTime","setSelectBox","setStart","e","touches","preventDefault","getRef","className","ref","el","document","removeEventListener","addEventListener","getContext","onMouseDown","onTouchStart","onTouchEnd","onMouseMove","onMouseUp","onMouseLeave","setInterval","clearInterval","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","n","property","prototype","hasOwnProperty","call","p","s","moduleId","l","modules"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"react\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/**\n * used to loop over and possibly filter entities\n * Accepts either a map of Entities with EntitiyID as Key, or an array\n * if the CB returns true, an array of entities that return true is returned.\n * @param entities\n * @param fn\n * @returns {Array}\n */\nexport default (entities, fn) => {\n  let ents = [];\n\n  if (entities.forEach) {\n    entities.forEach((ent) => {\n      fn(ent) && ents.push(ent);\n    });\n  } else {\n    Object.keys(entities).forEach((entID) => {\n      fn(entities[entID]) && ents.push(entities[entID]);\n    });\n  }\n\n  return ents;\n};","import entityLoop from './util/entityLoop';\n\n\nclass Group {\n  constructor(components, entities = {}) {\n    this.components = components;\n    this.entities = entities;\n    this.array = [];\n  }\n}\n\nGroup.groups = {};\n\nGroup.reset = () => {\n  Group.groups = {};\n};\n\nGroup.generateGroupKey = (components) => {\n  let names = [];\n  for (let count = 0; count < components.length; count++) {\n    let name = components[count];\n    names.push(name);\n  }\n\n  return names\n    .map((x) => {\n      return x.toLowerCase();\n    })\n    .sort()\n    .join('-');\n};\n\nGroup.getGroup = (components) => {\n  let key = Group.generateGroupKey(components);\n  return Group.groups[key] || {};\n};\n\n// this will create a new index group for the provided components.\nGroup.indexGroup = (components, entities) => {\n  let compArray = components.reduce ? components : [components];\n\n  let key = Group.generateGroupKey(compArray);\n\n  let group;\n\n  if (Group.groups[key]) {\n    return;\n  } else {\n    group = Group.groups[key] = new Group(compArray);\n  }\n\n  // insert the provided entities into this group...\n  entityLoop(entities, (entity) => {\n    if (entity.hasComponents(compArray)) {\n      group.entities[entity.id] = entity;\n      group.array = [...group.array, entity];\n    }\n  });\n\n  return group;\n};\n\nexport default Group;\n\n// life cycle of a group!\n\n// 1. Adding a component adds a group with that one component.\n// 2. Adding 2nd component creates a group with that 2nd component\n// 3. Querying for a list of components should create an group for that list, one off.\n// 4. Adding and removing components will update the above lists as needed.","import Group from './Group';\nimport entityLoop from './util/entityLoop';\n\nexport let spliceOne = function(arr, index = 0) {\n  let idx = index;\n  let len = arr.length;\n  if (!len || idx >= len) {\n    return;\n  }\n\n  while (idx < len) {\n    arr[idx] = arr[idx + 1];\n    idx++;\n  }\n  arr.length--;\n};\n\n\n/**\n * Entity class to a static interface\n *\n * entity.addComponent(Component component)\n *\n */\n\n\nclass Entity {\n  constructor(classRef) {\n    Entity.counter++;\n    this.id = Entity.counter;\n    this.constructor = classRef;\n    this.components = {};\n    Entity.entities[this.id] = this;\n  }\n\n  assignGroup(group) {\n    group.entities[this.id] = this;\n  }\n\n  // A component is added\n  // we create a new group index, for exm\n  addComponent(component) {\n    this.components[component.name] = component;\n    this[component.name] = component;\n    // creates an index group if it does not exist..\n\n    let arr = [];\n    for (let compName in this.components) {\n      arr.push(compName);\n    }\n    Group.indexGroup(arr, Entity.entities);\n\n    // we need to see if we need to add entity into other groups.\n    for (let groupKey in Group.groups) {\n      let group = Group.groups[groupKey];\n      // if the ent is in this group, skip.\n      if (group.entities[this.id]) {\n        continue;\n      }\n      // if the component is not in this group, skip.\n      if (group.components.indexOf(component.name) === -1) {\n        continue;\n      }\n      // if this ent does not have all the other comps, skip..\n      if (this.hasComponents(group.components)) {\n        this.assignGroup(group);\n        let newGroup = this.copyArray(group);\n        group.array = this.extendGroup(newGroup);\n      }\n    }\n  }\n\n  // that's not really copying the array now is it?\n  copyArray(group) {\n    return group.array;\n  }\n\n  extendGroup(newGroup) {\n    newGroup[newGroup.length] = this;\n    return newGroup;\n  }\n\n  // mixed, an actual component or just component name\n  removeComponent(comp) {\n    let component = this.components[comp] || comp;\n    let compName = component.name;\n\n    // we need to see if we need to remove entity from other groups\n    for (let groupKey in Group.groups) {\n      let group = Group.groups[groupKey];\n      // if the ent is in this group, skip.\n\n      let compInGroup = group.components.indexOf(component.name) > -1;\n      let entHasReqComps = this.hasComponents(group.components);\n\n      // if this ent does not have all the other comps, skip..\n      if (group.entities[this.id] && compInGroup && entHasReqComps) {\n        delete group.entities[this.id];\n        spliceOne(group.array, group.array.indexOf(this));\n      }\n    }\n\n    delete this.components[compName];\n    delete this[compName];\n  }\n\n  /**\n   * Destroying an entity means removing all its components and deleting it from the Entity Object\n   */\n  destroy() {\n    Object.keys(this.components).forEach((compName) => {\n      this.removeComponent(this.components[compName]);\n    });\n    delete Entity.entities[this.id];\n  }\n\n  hasComponents(components = []) {\n    // quick breakout\n    if (this.components[components]) {\n      return true;\n    }\n\n    let compNames = components.reduce ? components : [components];\n\n    return compNames.reduce((agg, compName) => {\n      return agg && !!this.components[compName];\n    }, true);\n  }\n}\n\nEntity.entities = {};\n\n/**\n * @param components\n * @param type 'array'|'map'\n * @return return array/map\n */\nEntity.getByComps = (components, type = 'array') => {\n  let compNames = components.reduce ? components : [components];\n  Group.indexGroup(components, Entity.entities);\n  let group = Group.getGroup(compNames);\n  return type === 'map' ? group.entities : group.array.concat();\n};\n\nEntity.reset = () => {\n  entityLoop(Entity.entities, (entity) => {\n    entity.destroy();\n  });\n  Group.reset();\n};\n\nEntity.counter = 0;\n\nwindow.Entity = Entity;\nexport default Entity;","class ObjectPool {\n  constructor(PooledClass, incrementWhenEmpty = 10) {\n    this.type = PooledClass;\n    this.freePool = [];\n    this.stats = {\n      free: 0,\n      used: 0\n    };\n    this.incrementWhenEmpty = incrementWhenEmpty;\n  }\n\n  reset() {\n    this.freePool = [];\n    this.stats = {\n      free: 0,\n      used: 0\n    };\n  }\n\n  // Ensures the pool has at least $amount of free objects\n  generate(amount) {\n    let count = amount - this.stats.free > 0 ? amount - this.stats.free : 0;\n    // generate a gazzilion fighters?\n    while (count > 0) {\n      this.freePool.push(new this.type());\n      count--;\n    }\n    this.stats.free = this.freePool.length;\n  }\n\n  // acquires an object, marks it as 'used'.\n  acquire() {\n    if (this.freePool.length === 0) {\n      this.generate(this.incrementWhenEmpty);\n    }\n    let obj = this.freePool.pop();\n    this.stats.free = this.freePool.length;\n    return obj;\n  }\n\n  // releases an object, marks it as free\n  release(object) {\n    // prevent release twice\n    if (this.freePool.indexOf(object) === -1) {\n      this.freePool.push(object);\n      this.stats.free = this.freePool.length;\n    }\n  }\n}\n\nexport default ObjectPool;","/**\n * Library for working with Canvas,\n * Works by using a 2D context as an argument\n * Provides abstraction for some common shapes in Canvas\n */\n\n\n\nexport class Shape {\n  constructor(draw, metaData) {\n    this.draw = draw;\n    this.metaData = metaData;\n  }\n}\n\nclass CanvasAPI {\n  constructor(ctx, strokeStyle = 'white') {\n    this.ctx = ctx;\n    this.defaultStrokeStyle = strokeStyle;\n    ctx.strokeStyle = strokeStyle;\n    this.shapes = new Map();\n  }\n\n  /**\n   * Clears all the shapes\n   */\n  clear() {\n    this.shapes = new Map();\n  }\n\n  /**\n   * Removes a shape by its ID\n   * @param id\n   */\n  remove(id) {\n    this.shapes.delete(id);\n  }\n\n\n  /* istanbul ignore next */\n  addImage({\n    id,\n    image, // the image to display\n    x, y, // pos for x,y..\n    height, width,\n    cropStartX, cropStartY, cropSizeX, cropSizeY,\n    rotation // in radians\n  }) {\n    let ctx = this.ctx;\n    this.shapes.set(id, new Shape(() => {\n      ctx.beginPath();\n      ctx.save();\n      ctx.translate(x + width / 2, y + height / 2);\n      ctx.rotate(rotation);\n      ctx.drawImage(image,\n        cropStartX, cropStartY, cropSizeX, cropSizeY,\n        -width / 2, -height / 2,  // pos in canvas // at the top left of the canvas\n        width, height); // size in canvas\n      ctx.restore();\n      ctx.closePath();\n    }, {\n      id,\n      type: 'image',\n      x,\n      y,\n      height,\n      width\n    }));\n  }\n\n  addRect({id, x, y, width, height, strokeStyle, lineWidth}) {\n    let ctx = this.ctx;\n    this.shapes.set(id, new Shape(() => {\n      ctx.strokeStyle = strokeStyle;\n      ctx.lineWidth = lineWidth;\n      ctx.beginPath();\n      ctx.rect(\n        x,\n        y,\n        width,\n        height\n      );\n      ctx.stroke();\n      ctx.closePath();\n    }, {\n      id,\n      type: 'rect',\n      x,\n      y,\n      height,\n      width\n    }));\n  }\n\n  addCircle({id, x, y, radius, strokeStyle, lineWidth, fillColor}) {\n    let ctx = this.ctx;\n    this.shapes.set(id, new Shape(() => {\n      ctx.strokeStyle = strokeStyle;\n      ctx.lineWidth = lineWidth;\n      ctx.moveTo(x, y);\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, Math.PI * 2);\n      if (fillColor) {\n        ctx.fillStyle = fillColor;\n        ctx.fill();\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }, {\n      id,\n      type: 'circle',\n      x,\n      y,\n      radius\n    }));\n  }\n\n  /**\n   * Method allows us to pan around the canvas\n   */\n  pan(x, y) {\n    this.panX = x;\n    this.panY = y;\n    this.ctx.setTransform(1, 0, 0, 1, x, y);\n  }\n\n  getPan() {\n    return {\n      panX : this.panX || 0,\n      panY : this.panY || 0\n    };\n  }\n\n  write({id, text, x, y, font, textBaseline, fillStyle}) {\n    this.shapes.set(id, new Shape(() => {\n      this.ctx.beginPath();\n      this.ctx.font = font;\n      this.ctx.textBaseline = textBaseline;\n      this.ctx.fillStyle = fillStyle;\n      this.ctx.fillText(text, x, y);\n      this.ctx.closePath();\n    }, {\n      id,\n      x,\n      y\n    }));\n  }\n\n  draw() {\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n\n    for (let shape of this.shapes.values()) {\n      shape.draw();\n      this.ctx.strokeStyle = this.defaultStrokeStyle;\n    }\n  }\n}\n\n// adding an image causes segmentation fault for some reason :)\n/* istanbul ignore next */\nif (process.env.NODE_ENV === 'test') {\n  CanvasAPI.prototype.addImage = () => {};\n}\nexport default CanvasAPI;","/**\n * Class that represents the current selected area by the user\n * Populated when the user click, holds and move the mouse\n */\nclass SelectedBox {\n  constructor() {\n    this.reset();\n  }\n\n  reset() {\n    this.start = {\n      x: 0,\n      y: 0\n    };\n    this.end = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  getData() {\n    return {\n      start : Object.assign({}, this.start),\n      end : Object.assign({}, this.end),\n      width : this.getWidth(),\n      height : this.getHeight()\n    };\n  }\n\n  getHeight() {\n    return this.end.y - this.start.y;\n  }\n\n  getWidth() {\n    return this.end.x - this.start.x;\n  }\n\n  setStart(x, y) {\n    this.start.x = x;\n    this.start.y = y;\n  }\n\n  setEnd(x, y) {\n    this.end.x = x;\n    this.end.y = y;\n  }\n}\n\nexport default SelectedBox;","/**\n * Utility function to detect if a point is inside a circle\n * @param x\n * @param y\n * @param centerX\n * @param centerY\n * @param radius\n * @return {boolean}\n */\nfunction isPosInsideCircle(x, y, centerX, centerY, radius) {\n  return Math.pow((x - centerX), 2) + Math.pow((y - centerY), 2) < Math.pow(radius, 2);\n}\n\nexport default isPosInsideCircle;","import isPosInsideCircle from './isPosInsideCircle';\n\n\n/**\n * Function used for getting all shapes hit from a single click (not from a selection box)\n */\nfunction getShapesFromClick(shapes, x, y) {\n  let hits = [];\n\n  shapes.forEach((shape, id) => {\n    let shapeMetaData = shape.metaData;\n    let shapeX      = shapeMetaData.x;\n    let shapeY      = shapeMetaData.y;\n    let radius = shapeMetaData.radius;\n    let type   = shapeMetaData.type;\n\n\n    if (type === 'circle' && isPosInsideCircle(x, y, shapeX, shapeY, radius)) {\n      hits.push(id);\n    } else if (type !== 'circle') {\n      // do nothing, no support for non circles\n    }\n  });\n\n  return hits;\n}\n\nexport default getShapesFromClick;","function getShapesInSelectionBox(shapes, selectedData) {\n  let minX = Math.min(selectedData.start.x, selectedData.end.x);\n  let maxX = Math.max(selectedData.start.x, selectedData.end.x);\n  let minY = Math.min(selectedData.start.y, selectedData.end.y);\n  let maxY = Math.max(selectedData.start.y, selectedData.end.y);\n\n\n  let hits = [];\n  shapes.forEach((shape, id) => {\n    let shapeMetaData = shape.metaData;\n    let shapeX      = shapeMetaData.x;\n    let shapeY      = shapeMetaData.y;\n    let type   = shapeMetaData.type;\n\n    if (type === 'circle') {\n      let centerX = shapeX;\n      let centerY = shapeY;\n      if (centerX >= minX && centerX <= maxX && centerY >= minY && centerY <= maxY) {\n        hits.push(id);\n      }\n    } else {\n      // do nothing, no support for non circles\n    }\n  });\n\n  return hits;\n}\n\nexport default getShapesInSelectionBox;","import React from 'react';\nimport CanvasAPI from 'lib/CanvasAPI/CanvasAPI';\nimport SelectedBox from './SelectedBox/SelectedBox';\nimport getShapesFromClick from './selectionUtils/getShapesFromClick';\nimport getShapesInSelectionBox from './selectionUtils/getShapesInSelectionBox';\n\nclass GameCanvas {\n  constructor(options) {\n    this.selectedBoxColor = options.selectedBoxColor || 'blue';\n    this.mapHeight = options.mapHeight;\n    this.mapWidth = options.mapWidth;\n    this.viewHeight = options.viewHeight;\n    this.viewWidth = options.viewWidth;\n    this.onViewMapClick = options.onViewMapClick;\n    this.onViewMapMove = options.onViewMapMove;\n    this.lastClick = 0;\n    this.dbClick = false;\n    this.lastTap = 0;\n    this.lastClick = false;\n    this.selectedBox = new SelectedBox();\n    this.updateViewMapCursorPosition = this.updateViewMapCursorPosition.bind(this);\n    this.updateMiniMapCursorPosition = this.updateMiniMapCursorPosition.bind(this);\n    this.handleMapMouseUp = this.handleMapMouseUp.bind(this);\n    this.handleMapMouseDown = this.handleMapMouseDown.bind(this);\n    this.handleMiniMapClick = this.handleMiniMapClick.bind(this);\n    this.handleMapMouseMove = this.handleMapMouseMove.bind(this);\n    this.handleMapMouseLeave = this.handleMapMouseLeave.bind(this);\n    this.handleTouchMove = this.handleTouchMove.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleMapTouchEnd = this.handleMapTouchEnd.bind(this);\n    this.handleMiniMapTouchStart = this.handleMiniMapTouchStart.bind(this);\n  }\n\n  updateCursorPosition(event, canvas, canvasAPI) {\n    let rect = canvas.getBoundingClientRect();\n    // base position\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n\n    x = Math.max(0, Math.round(x * (canvas.width / rect.width))) - canvasAPI.getPan().panX;\n    y = Math.max(0, Math.round(y * (canvas.height / rect.height))) - canvasAPI.getPan().panY;\n\n    return {x, y};\n  }\n\n  handleMapMouseMove() {\n    if (this.isMouseDown) {\n      this.selectedBox.setEnd(this.viewMapX, this.viewMapY);\n\n      let data = this.selectedBox.getData();\n\n      this.mapAPI.addRect({\n        id: 'selectedBox',\n        x: data.start.x,\n        y: data.start.y,\n        width: data.width,\n        height: data.height,\n        strokeStyle: this.selectedBoxColor\n      });\n    }\n\n    this.onViewMapMove({\n      x: this.viewMapX,\n      y: this.viewMapY,\n      isMouseDown: this.isMouseDown,\n      dbClick: this.dbClick,\n      selectedBox: this.selectedBox.getData()\n    });\n  }\n\n  handleMapMouseLeave() {\n    if (this.isMouseDown) {\n      this.handleMapMouseUp();\n    }\n  }\n\n  handleMapTouchEnd() {\n    this.isMouseDown = false;\n\n    let selectedData = this.selectedBox.getData();\n\n    let hits = [];\n    // if a single click...\n    if (selectedData.end.x === selectedData.start.x) {\n      let x = selectedData.end.x;\n      let y = selectedData.end.y;\n      hits = getShapesFromClick(this.mapAPI.shapes, x, y);\n    } else {\n      hits = getShapesInSelectionBox(this.mapAPI.shapes, selectedData);\n    }\n\n    this.mapAPI.addRect({\n      id: 'selectedBox',\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    });\n\n    this.onViewMapClick({\n      x: this.viewMapX,\n      y: this.viewMapY,\n      isMouseDown: this.isMouseDown,\n      dbClick: this.dbTap || this.dbClick,\n      selectedBox: selectedData,\n      hits\n    });\n    this.selectedBox.reset();\n  }\n\n  handleMapMouseUp() {\n    if (!this.lastTap) {\n      this.handleMapTouchEnd();\n    }\n  }\n\n\n  updateViewMapCursorPosition(event) {\n    let {x, y} = this.updateCursorPosition(event, this.viewMapCanvas, this.mapAPI);\n    this.viewMapX = x;\n    this.viewMapY = y;\n  }\n\n  updateMiniMapCursorPosition(event) {\n    let {x, y} = this.updateCursorPosition(event, this.miniMapCanvas, this.miniMapAPI);\n    this.miniMapX = x;\n    this.miniMapY = y;\n  }\n\n  getNewCanvasPairs({getMapRef, getMiniRef}) {\n    return {\n      map: this.generateMapCanvas(getMapRef),\n      minimap: this.generateMiniMapCanvas(getMiniRef)\n    };\n  }\n\n  handleMiniMapClick() {\n    let x = this.miniMapX;\n    let y = this.miniMapY;\n    // Handle negative overflows, both numbers should be positive\n    // the reason we divide in 2 is because we want to center the view\n    let calcPanX = Math.max(x - this.viewWidth / 2, 0);\n    let calcPanY = Math.max(y - this.viewHeight / 2, 0);\n\n    // Handle positive overflows, both numbers should not exceed map size\n    let width = this.mapWidth;\n    let height = this.mapHeight;\n\n    calcPanX = calcPanX + this.viewWidth < width ? calcPanX : width - this.viewWidth;\n    calcPanY = calcPanY + this.viewHeight < height ? calcPanY : height - this.viewHeight;\n\n    this.mapAPI.pan(-calcPanX, -calcPanY);\n\n    // draw the minimap square box\n    this.updateMiniMapSquare();\n  }\n\n  updateMiniMapSquare() {\n    this.miniMapAPI.addRect({\n      id: 'currentMap',\n      x: -this.mapAPI.getPan().panX,\n      y: -this.mapAPI.getPan().panY,\n      width: this.viewWidth,\n      height: this.viewHeight,\n      strokeStyle: 'green',\n      lineWidth: 20\n    });\n  }\n\n  handleMapMouseDown() {\n    if (!this.lastTap) {\n      let now = new Date().getTime();\n      this.dbClick = (now - this.lastClick) < 300;\n      this.lastClick = now;\n      this.isMouseDown = true;\n      this.setSelectBox();\n    }\n  }\n\n  setSelectBox() {\n    this.selectedBox.setStart(this.viewMapX, this.viewMapY);\n    this.selectedBox.setEnd(this.viewMapX, this.viewMapY);\n  }\n\n  handleTouchStart(e) {\n    let {x, y} = this.updateCursorPosition(e.touches[0], this.viewMapCanvas, this.mapAPI);\n    let now = new Date().getTime();\n\n    this.dbTap = (now - this.lastTap) < 300;\n    this.lastTap = now;\n\n    this.viewMapX = x;\n    this.viewMapY = y;\n\n    this.setSelectBox();\n  }\n\n  handleMiniMapTouchStart(e) {\n    let {x, y} = this.updateCursorPosition(e.touches[0], this.miniMapCanvas, this.miniMapAPI);\n\n    this.miniMapX = x;\n    this.miniMapY = y;\n\n    this.handleMiniMapClick();\n  }\n\n\n  handleTouchMove(e) {\n    e.preventDefault();\n    let {x, y} = this.updateCursorPosition(e.touches[0], this.viewMapCanvas, this.mapAPI);\n\n    let calcPanX;\n    let calcPanY;\n    let {panX, panY} = this.mapAPI.getPan();\n\n    let xMoved = x - this.viewMapX;\n    let yMoved = y - this.viewMapY;\n\n    calcPanX = panX + xMoved;\n    calcPanY = panY + yMoved;\n\n    // both numbers should be negative\n    calcPanX = Math.min(calcPanX, 0);\n    calcPanY = Math.min(calcPanY, 0);\n\n    // the panning + the mapSize, should not exceed the viewSize\n    let width = this.mapWidth;\n    let height = this.mapHeight;\n    calcPanX = -calcPanX + this.viewWidth < width ? calcPanX : this.viewWidth - width;\n    calcPanY = -calcPanY + this.viewHeight < height ? calcPanY : this.viewHeight - height;\n\n    this.mapAPI.pan(calcPanX, calcPanY);\n  }\n\n  generateMapCanvas(getRef) {\n    return (\n      <canvas\n        className=\"viewMap\"\n        ref={(el) => {\n          if (!el) {\n            return null;\n          }\n          this.viewMapCanvas = el;\n          document.removeEventListener('mousemove', this.updateViewMapCursorPosition);\n          document.addEventListener('mousemove', this.updateViewMapCursorPosition);\n          el.removeEventListener('touchmove', this.handleTouchMove, false);\n          el.addEventListener('touchmove', this.handleTouchMove, false);\n\n          this.mapAPI = new CanvasAPI(el.getContext('2d'));\n          getRef(this.mapAPI, el);\n        }}\n        height={this.viewHeight}\n        width={this.viewWidth}\n        onMouseDown={this.handleMapMouseDown}\n        onTouchStart={this.handleTouchStart}\n        onTouchEnd={this.handleMapTouchEnd}\n        onMouseMove={this.handleMapMouseMove}\n        onMouseUp={this.handleMapMouseUp}\n        onMouseLeave={this.handleMapMouseLeave}\n      ></canvas>\n    );\n  }\n\n  generateMiniMapCanvas(getRef) {\n    return (\n      <canvas\n        className=\"minimap\"\n        ref={(el) => {\n          if (!el) {\n            return null;\n          }\n          this.miniMapCanvas = el;\n          document.removeEventListener('mousemove', this.updateMiniMapCursorPosition);\n          document.addEventListener('mousemove', this.updateMiniMapCursorPosition);\n\n          this.miniMapAPI = new CanvasAPI(el.getContext('2d'));\n          // inits the minimap square\n          // so this assumes that there's ALREADy a mapAPI\n          // bad assumption....\n\n          let key = setInterval(() => {\n            if (this.mapAPI) {\n              this.updateMiniMapSquare();\n              clearInterval(key);\n            }\n          }, 100);\n\n          getRef(this.miniMapAPI, el);\n        }}\n        height={this.mapHeight}\n        width={this.mapWidth}\n        onMouseDown={this.handleMiniMapClick}\n        onTouchStart={this.handleMiniMapTouchStart}\n      ></canvas>\n    );\n  }\n}\n\nexport default GameCanvas;","import Entity from 'lib/ECS/Entity';\nimport entityLoop from 'lib/ECS/util/entityLoop';\nimport ObjectPool from 'lib/ObjectPool/ObjectPool';\nimport GameCanvas from 'lib/GameCanvas/GameCanvas';\n\nexport default {\n  Entity,\n  entityLoop,\n  ObjectPool,\n  GameCanvas\n};"],"sourceRoot":""}