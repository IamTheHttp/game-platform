{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:////Users/patrik.tolosa/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:////Users/patrik.tolosa/node_modules/@babel/runtime/helpers/createClass.js","webpack:///external \"react\"","webpack:////Users/patrik.tolosa/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:////Users/patrik.tolosa/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:////Users/patrik.tolosa/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:////Users/patrik.tolosa/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./src/lib/ECS/util/entityLoop.js","webpack:///./src/lib/ECS/Group.js","webpack:///./src/lib/ECS/Entity.js","webpack:///./src/lib/CanvasAPI/CanvasAPI.js","webpack:///./src/lib/ObjectPool/ObjectPool.js","webpack:///./src/lib/GameCanvas/SelectedBox/SelectedBox.js","webpack:///./src/lib/GameCanvas/selectionUtils/isPosInsideCircle.js","webpack:///./src/lib/GameCanvas/selectionUtils/getShapesFromClick.js","webpack:///./src/lib/GameCanvas/selectionUtils/getShapesInSelectionBox.js","webpack:///./src/lib/GameCanvas/GameCanvas.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","require","define","amd","a","i","window","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","m","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","Array","isArray","arr2","iter","Symbol","iterator","toString","call","from","entities","fn","ents","forEach","ent","push","keys","entID","Group","components","this","array","groups","reset","generateGroupKey","names","count","name","map","x","toLowerCase","sort","join","getGroup","indexGroup","group","compArray","reduce","entityLoop","entity","hasComponents","id","spliceOne","idx","len","Entity","classRef","counter","constructor","component","compName","groupKey","indexOf","assignGroup","newGroup","copyArray","extendGroup","comp","compInGroup","entHasReqComps","removeComponent","agg","getByComps","type","compNames","concat","destroy","Shape","draw","metaData","ObjectPool","PooledClass","incrementWhenEmpty","freePool","stats","free","used","amount","generate","obj","pop","object","CanvasAPI","ctx","strokeStyle","layers","initial","shapes","Map","defaultStrokeStyle","originCanvas","canvas","parentNode","newCanvas","cloneNode","insertBefore","getContext","layerName","layer","clear","image","y","height","width","cropStartX","cropStartY","cropSizeX","cropSizeY","rotation","set","beginPath","save","translate","rotate","drawImage","restore","closePath","lineWidth","rect","stroke","radius","fillColor","moveTo","arc","Math","PI","fillStyle","fill","panX","panY","setTransform","text","font","textBaseline","fillText","clearRect","values","SelectedBox","start","end","assign","getWidth","getHeight","isPosInsideCircle","centerX","centerY","pow","getShapesFromClick","hits","shape","shapeMetaData","shapeX","shapeY","getShapesInSelectionBox","selectedData","minX","min","maxX","max","minY","maxY","GameCanvas","options","selectedBoxColor","mapHeight","mapWidth","viewHeight","viewWidth","onViewMapClick","onViewMapMove","onMiniMapClick","onMiniMapMove","lastClick","dbClick","lastTap","selectedBox","updateViewMapCursorPosition","bind","updateMiniMapCursorPosition","handleMapMouseUp","handleMapMouseDown","handleMiniMapClick","handleMiniMapMove","handleMapMouseMove","handleMapMouseLeave","handleTouchMove","handleTouchStart","handleMapTouchEnd","handleMiniMapTouchStart","event","canvasAPI","getBoundingClientRect","clientX","left","clientY","top","round","getPan","isMouseDown","setEnd","viewMapX","viewMapY","data","getData","mapAPI","addRect","dbTap","updateCursorPosition","viewMapCanvas","miniMapCanvas","miniMapAPI","miniMapX","miniMapY","getMapRef","getMiniRef","generateMapCanvas","minimap","generateMiniMapCanvas","calcPanX","calcPanY","pan","updateMiniMapSquare","now","Date","getTime","setSelectBox","setStart","e","touches","preventDefault","getRef","className","ref","el","document","removeEventListener","addEventListener","onMouseDown","onTouchStart","onTouchEnd","onMouseMove","onMouseUp","onMouseLeave","setInterval","clearInterval","c","d","getter","o","get","r","toStringTag","value","t","mode","__esModule","ns","create","n","property","hasOwnProperty","p","s","moduleId","l","modules"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"react\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\n * used to loop over and possibly filter entities\n * Accepts either a map of Entities with EntitiyID as Key, or an array\n * if the CB returns true, an array of entities that return true is returned.\n * @param entities\n * @param fn\n * @returns {Array}\n */\nexport default (entities, fn) => {\n  let ents = [];\n\n  if (entities.forEach) {\n    entities.forEach((ent) => {\n      fn(ent) && ents.push(ent);\n    });\n  } else {\n    Object.keys(entities).forEach((entID) => {\n      fn(entities[entID]) && ents.push(entities[entID]);\n    });\n  }\n\n  return ents;\n};","import entityLoop from './util/entityLoop';\n\n\nclass Group {\n  constructor(components, entities = {}) {\n    this.components = components;\n    this.entities = entities;\n    this.array = [];\n  }\n}\n\nGroup.groups = {};\n\nGroup.reset = () => {\n  Group.groups = {};\n};\n\nGroup.generateGroupKey = (components) => {\n  let names = [];\n  for (let count = 0; count < components.length; count++) {\n    let name = components[count];\n    names.push(name);\n  }\n\n  return names\n    .map((x) => {\n      return x.toLowerCase();\n    })\n    .sort()\n    .join('-');\n};\n\nGroup.getGroup = (components) => {\n  let key = Group.generateGroupKey(components);\n  return Group.groups[key] || {};\n};\n\n// this will create a new index group for the provided components.\nGroup.indexGroup = (components, entities) => {\n  let compArray = components.reduce ? components : [components];\n\n  let key = Group.generateGroupKey(compArray);\n\n  let group;\n\n  if (Group.groups[key]) {\n    return;\n  } else {\n    group = Group.groups[key] = new Group(compArray);\n  }\n\n  // insert the provided entities into this group...\n  entityLoop(entities, (entity) => {\n    if (entity.hasComponents(compArray)) {\n      group.entities[entity.id] = entity;\n      group.array = [...group.array, entity];\n    }\n  });\n\n  return group;\n};\n\nexport default Group;\n\n// life cycle of a group!\n\n// 1. Adding a component adds a group with that one component.\n// 2. Adding 2nd component creates a group with that 2nd component\n// 3. Querying for a list of components should create an group for that list, one off.\n// 4. Adding and removing components will update the above lists as needed.","import Group from './Group';\nimport entityLoop from './util/entityLoop';\n\nexport let spliceOne = function(arr, index = 0) {\n  let idx = index;\n  let len = arr.length;\n  if (!len || idx >= len) {\n    return;\n  }\n\n  while (idx < len) {\n    arr[idx] = arr[idx + 1];\n    idx++;\n  }\n  arr.length--;\n};\n\n\n/**\n * Entity class to a static interface\n *\n * entity.addComponent(Component component)\n *\n */\n\n\nclass Entity {\n  constructor(classRef) {\n    Entity.counter++;\n    this.id = Entity.counter;\n    this.constructor = classRef;\n    this.components = {};\n    Entity.entities[this.id] = this;\n  }\n\n  assignGroup(group) {\n    group.entities[this.id] = this;\n  }\n\n  // A component is added\n  // we create a new group index, for exm\n  addComponent(component) {\n    this.components[component.name] = component;\n    this[component.name] = component;\n    // creates an index group if it does not exist..\n\n    let arr = [];\n    for (let compName in this.components) {\n      arr.push(compName);\n    }\n    Group.indexGroup(arr, Entity.entities);\n\n    // we need to see if we need to add entity into other groups.\n    for (let groupKey in Group.groups) {\n      let group = Group.groups[groupKey];\n      // if the ent is in this group, skip.\n      if (group.entities[this.id]) {\n        continue;\n      }\n      // if the component is not in this group, skip.\n      if (group.components.indexOf(component.name) === -1) {\n        continue;\n      }\n      // if this ent does not have all the other comps, skip..\n      if (this.hasComponents(group.components)) {\n        this.assignGroup(group);\n        let newGroup = this.copyArray(group);\n        group.array = this.extendGroup(newGroup);\n      }\n    }\n  }\n\n  // that's not really copying the array now is it?\n  copyArray(group) {\n    return group.array;\n  }\n\n  extendGroup(newGroup) {\n    newGroup[newGroup.length] = this;\n    return newGroup;\n  }\n\n  // mixed, an actual component or just component name\n  removeComponent(comp) {\n    let component = this.components[comp] || comp;\n    let compName = component.name;\n\n    // we need to see if we need to remove entity from other groups\n    for (let groupKey in Group.groups) {\n      let group = Group.groups[groupKey];\n      // if the ent is in this group, skip.\n\n      let compInGroup = group.components.indexOf(component.name) > -1;\n      let entHasReqComps = this.hasComponents(group.components);\n\n      // if this ent does not have all the other comps, skip..\n      if (group.entities[this.id] && compInGroup && entHasReqComps) {\n        delete group.entities[this.id];\n        spliceOne(group.array, group.array.indexOf(this));\n      }\n    }\n\n    delete this.components[compName];\n    delete this[compName];\n  }\n\n  /**\n   * Destroying an entity means removing all its components and deleting it from the Entity Object\n   */\n  destroy() {\n    Object.keys(this.components).forEach((compName) => {\n      this.removeComponent(this.components[compName]);\n    });\n    delete Entity.entities[this.id];\n  }\n\n  hasComponents(components = []) {\n    // quick breakout\n    if (this.components[components]) {\n      return true;\n    }\n\n    let compNames = components.reduce ? components : [components];\n\n    return compNames.reduce((agg, compName) => {\n      return agg && !!this.components[compName];\n    }, true);\n  }\n}\n\nEntity.entities = {};\n\n/**\n * @param components\n * @param type 'array'|'map'\n * @return return array/map\n */\nEntity.getByComps = (components, type = 'array') => {\n  let compNames = components.reduce ? components : [components];\n  Group.indexGroup(components, Entity.entities);\n  let group = Group.getGroup(compNames);\n  return type === 'map' ? group.entities : group.array.concat();\n};\n\nEntity.reset = () => {\n  entityLoop(Entity.entities, (entity) => {\n    entity.destroy();\n  });\n  Group.reset();\n};\n\nEntity.counter = 0;\n\nwindow.Entity = Entity;\nexport default Entity;","/**\n * Library for working with Canvas,\n * Works by using a 2D context as an argument\n * Provides abstraction for some common shapes in Canvas\n */\n\n\n\nexport class Shape {\n  constructor(draw, metaData) {\n    this.draw = draw;\n    this.metaData = metaData;\n  }\n}\n\nclass CanvasAPI {\n  constructor(ctx, strokeStyle = 'white') {\n    this.layers = {\n      initial: {\n        ctx,\n        shapes: new Map()\n      }\n    };\n    \n    this.defaultStrokeStyle = strokeStyle;\n    ctx.strokeStyle = strokeStyle;\n  }\n  \n  addLayer(name) {\n    if (!this.layers.initial.ctx) {\n      throw 'Cannot create layer, no initial context found';\n    } else {\n      let originCanvas = this.layers.initial.ctx.canvas;\n      \n      let parentNode = originCanvas.parentNode;\n      let newCanvas = originCanvas.cloneNode();\n  \n      parentNode.insertBefore(newCanvas, originCanvas);\n      \n      this.layers[name] = {\n        ctx: newCanvas.getContext('2d'),\n        shapes: new Map()\n      };\n    }\n  }\n  \n  /**\n   * Clears all the shapes\n   */\n  // TODO should depend on layer\n  clear(layerName) {\n    let layer =  this.layers[layerName] || this.layers.initial;\n    let ctx = layer.ctx;\n    layer.shapes = new Map();\n  }\n  \n  clearAllLayers() {\n    for (let layerName in this.layers) {\n      this.clear(layerName);\n    }\n  }\n\n  /**\n   * Removes a shape by its ID\n   * @param id\n   * @param layerName\n   */\n  remove(id, layerName) {\n    let layer =  this.layers[layerName] || this.layers.initial;\n    let ctx = layer.ctx;\n    let shapes = layer.shapes;\n    shapes.delete(id);\n  }\n\n  /* istanbul ignore next */\n  addImage({\n    id,\n    image, // the image to display\n    x, y, // pos for x,y..\n    height, width,\n    cropStartX, cropStartY, cropSizeX, cropSizeY,\n    rotation // in radians\n  }, layerName) {\n    let layer =  this.layers[layerName] || this.layers.initial;\n    let ctx = layer.ctx;\n    let shapes = layer.shapes;\n    \n    shapes.set(id, new Shape(() => {\n      ctx.beginPath();\n      ctx.save();\n      ctx.translate(x + width / 2, y + height / 2);\n      ctx.rotate(rotation);\n      ctx.drawImage(image,\n        cropStartX, cropStartY, cropSizeX, cropSizeY,\n        -width / 2, -height / 2,  // pos in canvas // at the top left of the canvas\n        width, height); // size in canvas\n      ctx.restore();\n      ctx.closePath();\n    }, {\n      id,\n      type: 'image',\n      x,\n      y,\n      height,\n      width\n    }));\n  }\n\n  addRect({id, x, y, width, height, strokeStyle, lineWidth}, layerName) {\n    let layer =  this.layers[layerName] || this.layers.initial;\n    let ctx = layer.ctx;\n    let shapes = layer.shapes;\n    \n    shapes.set(id, new Shape(() => {\n      ctx.strokeStyle = strokeStyle;\n      ctx.lineWidth = lineWidth;\n      ctx.beginPath();\n      ctx.rect(\n        x,\n        y,\n        width,\n        height\n      );\n      ctx.stroke();\n      ctx.closePath();\n    }, {\n      id,\n      type: 'rect',\n      x,\n      y,\n      height,\n      width\n    }));\n  }\n\n  addCircle({id, x, y, radius, strokeStyle, lineWidth, fillColor}, layerName) {\n    let layer =  this.layers[layerName] || this.layers.initial;\n    let ctx = layer.ctx;\n    let shapes = layer.shapes;\n    \n    shapes.set(id, new Shape(() => {\n      ctx.strokeStyle = strokeStyle;\n      ctx.lineWidth = lineWidth;\n      ctx.moveTo(x, y);\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, Math.PI * 2);\n      if (fillColor) {\n        ctx.fillStyle = fillColor;\n        ctx.fill();\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }, {\n      id,\n      type: 'circle',\n      x,\n      y,\n      radius\n    }));\n  }\n\n  /**\n   * Method allows us to pan around the canvas\n   */\n  pan(x, y) {\n    this.panX = x;\n    this.panY = y;\n    \n    for (let layerName in this.layers) {\n      let layer = this.layers[layerName];\n      let ctx = layer.ctx;\n      ctx.setTransform(1, 0, 0, 1, x, y);\n  \n      // non initial layers are drawn much less often, so we need a manual one here.\n      if (layerName !== 'initial') {\n        this.draw(layerName); // pan requires a draw to all non initial layers\n      }\n    }\n  }\n\n  getPan() {\n    return {\n      panX : this.panX || 0,\n      panY : this.panY || 0\n    };\n  }\n  \n  write({id, text, x, y, font, textBaseline, fillStyle}, layerName) {\n    let layer =  this.layers[layerName] || this.layers.initial;\n    let ctx = layer.ctx;\n    let shapes = layer.shapes;\n  \n    shapes.set(id, new Shape(() => {\n      ctx.beginPath();\n      ctx.font = font;\n      ctx.textBaseline = textBaseline;\n      ctx.fillStyle = fillStyle;\n      ctx.fillText(text, x, y);\n      ctx.closePath();\n    }, {\n      id,\n      x,\n      y\n    }));\n  }\n  \n  draw(layerName) {\n    let layer =  this.layers[layerName] || this.layers.initial;\n    let ctx = layer.ctx;\n    let shapes = layer.shapes;\n  \n    ctx.save();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.restore();\n\n    for (let shape of shapes.values()) {\n      shape.draw();\n      ctx.strokeStyle = this.defaultStrokeStyle;\n    }\n  }\n}\n\n// adding an image causes segmentation fault for some reason :)\n/* istanbul ignore next */\nif (process.env.NODE_ENV === 'test') {\n  CanvasAPI.prototype.addImage = () => {};\n}\nexport default CanvasAPI;","class ObjectPool {\n  constructor(PooledClass, incrementWhenEmpty = 10) {\n    this.type = PooledClass;\n    this.freePool = [];\n    this.stats = {\n      free: 0,\n      used: 0\n    };\n    this.incrementWhenEmpty = incrementWhenEmpty;\n  }\n\n  reset() {\n    this.freePool = [];\n    this.stats = {\n      free: 0,\n      used: 0\n    };\n  }\n\n  // Ensures the pool has at least $amount of free objects\n  generate(amount) {\n    let count = amount - this.stats.free > 0 ? amount - this.stats.free : 0;\n    // generate a gazzilion fighters?\n    while (count > 0) {\n      this.freePool.push(new this.type());\n      count--;\n    }\n    this.stats.free = this.freePool.length;\n  }\n\n  // acquires an object, marks it as 'used'.\n  acquire() {\n    if (this.freePool.length === 0) {\n      this.generate(this.incrementWhenEmpty);\n    }\n    let obj = this.freePool.pop();\n    this.stats.free = this.freePool.length;\n    return obj;\n  }\n\n  // releases an object, marks it as free\n  release(object) {\n    // prevent release twice\n    if (this.freePool.indexOf(object) === -1) {\n      this.freePool.push(object);\n      this.stats.free = this.freePool.length;\n    }\n  }\n}\n\nexport default ObjectPool;","/**\n * Class that represents the current selected area by the user\n * Populated when the user click, holds and move the mouse\n */\nclass SelectedBox {\n  constructor() {\n    this.reset();\n  }\n\n  reset() {\n    this.start = {\n      x: 0,\n      y: 0\n    };\n    this.end = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  getData() {\n    return {\n      start : Object.assign({}, this.start),\n      end : Object.assign({}, this.end),\n      width : this.getWidth(),\n      height : this.getHeight()\n    };\n  }\n\n  getHeight() {\n    return this.end.y - this.start.y;\n  }\n\n  getWidth() {\n    return this.end.x - this.start.x;\n  }\n\n  setStart(x, y) {\n    this.start.x = x;\n    this.start.y = y;\n  }\n\n  setEnd(x, y) {\n    this.end.x = x;\n    this.end.y = y;\n  }\n}\n\nexport default SelectedBox;","/**\n * Utility function to detect if a point is inside a circle\n * @param x\n * @param y\n * @param centerX\n * @param centerY\n * @param radius\n * @return {boolean}\n */\nfunction isPosInsideCircle(x, y, centerX, centerY, radius) {\n  return Math.pow((x - centerX), 2) + Math.pow((y - centerY), 2) < Math.pow(radius, 2);\n}\n\nexport default isPosInsideCircle;","import isPosInsideCircle from './isPosInsideCircle';\n\n\n/**\n * Function used for getting all shapes hit from a single click (not from a selection box)\n */\nfunction getShapesFromClick(shapes, x, y) {\n  let hits = [];\n\n  shapes.forEach((shape, id) => {\n    let shapeMetaData = shape.metaData;\n    let shapeX      = shapeMetaData.x;\n    let shapeY      = shapeMetaData.y;\n    let radius = shapeMetaData.radius;\n    let type   = shapeMetaData.type;\n\n\n    if (type === 'circle' && isPosInsideCircle(x, y, shapeX, shapeY, radius)) {\n      hits.push(id);\n    } else if (type !== 'circle') {\n      // do nothing, no support for non circles\n    }\n  });\n\n  return hits;\n}\n\nexport default getShapesFromClick;","function getShapesInSelectionBox(shapes, selectedData) {\n  let minX = Math.min(selectedData.start.x, selectedData.end.x);\n  let maxX = Math.max(selectedData.start.x, selectedData.end.x);\n  let minY = Math.min(selectedData.start.y, selectedData.end.y);\n  let maxY = Math.max(selectedData.start.y, selectedData.end.y);\n\n\n  let hits = [];\n  shapes.forEach((shape, id) => {\n    let shapeMetaData = shape.metaData;\n    let shapeX      = shapeMetaData.x;\n    let shapeY      = shapeMetaData.y;\n    let type   = shapeMetaData.type;\n\n    if (type === 'circle') {\n      let centerX = shapeX;\n      let centerY = shapeY;\n      if (centerX >= minX && centerX <= maxX && centerY >= minY && centerY <= maxY) {\n        hits.push(id);\n      }\n    } else {\n      // do nothing, no support for non circles\n    }\n  });\n\n  return hits;\n}\n\nexport default getShapesInSelectionBox;","import React from 'react';\nimport CanvasAPI from 'lib/CanvasAPI/CanvasAPI';\nimport SelectedBox from './SelectedBox/SelectedBox';\nimport getShapesFromClick from './selectionUtils/getShapesFromClick';\nimport getShapesInSelectionBox from './selectionUtils/getShapesInSelectionBox';\n\nclass GameCanvas {\n  constructor(options) {\n    this.selectedBoxColor = options.selectedBoxColor || 'blue';\n    this.mapHeight = options.mapHeight;\n    this.mapWidth = options.mapWidth;\n    this.viewHeight = options.viewHeight;\n    this.viewWidth = options.viewWidth;\n    this.onViewMapClick = options.onViewMapClick;\n    this.onViewMapMove = options.onViewMapMove;\n  \n    this.onMiniMapClick = options.onMiniMapClick;\n    this.onMiniMapMove = options.onMiniMapMove;\n    \n    this.lastClick = 0;\n    this.dbClick = false;\n    this.lastTap = 0;\n    this.lastClick = false;\n    this.selectedBox = new SelectedBox();\n    this.updateViewMapCursorPosition = this.updateViewMapCursorPosition.bind(this);\n    this.updateMiniMapCursorPosition = this.updateMiniMapCursorPosition.bind(this);\n    this.handleMapMouseUp = this.handleMapMouseUp.bind(this);\n    this.handleMapMouseDown = this.handleMapMouseDown.bind(this);\n    this.handleMiniMapClick = this.handleMiniMapClick.bind(this);\n    this.handleMiniMapMove = this.handleMiniMapMove.bind(this);\n    this.handleMapMouseMove = this.handleMapMouseMove.bind(this);\n    this.handleMapMouseLeave = this.handleMapMouseLeave.bind(this);\n    this.handleTouchMove = this.handleTouchMove.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleMapTouchEnd = this.handleMapTouchEnd.bind(this);\n    this.handleMiniMapTouchStart = this.handleMiniMapTouchStart.bind(this);\n  }\n\n  updateCursorPosition(event, canvas, canvasAPI) {\n    let rect = canvas.getBoundingClientRect();\n    // base position\n    let x = event.clientX - rect.left;\n    let y = event.clientY - rect.top;\n\n    x = Math.max(0, Math.round(x * (canvas.width / rect.width))) - canvasAPI.getPan().panX;\n    y = Math.max(0, Math.round(y * (canvas.height / rect.height))) - canvasAPI.getPan().panY;\n\n    return {x, y};\n  }\n\n  handleMapMouseMove() {\n    if (this.isMouseDown) {\n      this.selectedBox.setEnd(this.viewMapX, this.viewMapY);\n\n      let data = this.selectedBox.getData();\n\n      this.mapAPI.addRect({\n        id: 'selectedBox',\n        x: data.start.x,\n        y: data.start.y,\n        width: data.width,\n        height: data.height,\n        strokeStyle: this.selectedBoxColor\n      });\n    }\n\n    this.onViewMapMove({\n      x: this.viewMapX,\n      y: this.viewMapY,\n      isMouseDown: this.isMouseDown,\n      dbClick: this.dbClick,\n      selectedBox: this.selectedBox.getData()\n    });\n  }\n\n  handleMapMouseLeave() {\n    if (this.isMouseDown) {\n      this.handleMapMouseUp();\n    }\n  }\n\n  handleMapTouchEnd() {\n    this.isMouseDown = false;\n\n    let selectedData = this.selectedBox.getData();\n\n    let hits = [];\n    // if a single click...\n    if (selectedData.end.x === selectedData.start.x) {\n      let x = selectedData.end.x;\n      let y = selectedData.end.y;\n      hits = getShapesFromClick(this.mapAPI.layers.initial.shapes, x, y);\n    } else {\n      hits = getShapesInSelectionBox(this.mapAPI.layers.initial.shapes, selectedData);\n    }\n\n    this.mapAPI.addRect({\n      id: 'selectedBox',\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    });\n\n    this.onViewMapClick({\n      x: this.viewMapX,\n      y: this.viewMapY,\n      isMouseDown: this.isMouseDown,\n      dbClick: this.dbTap || this.dbClick,\n      selectedBox: selectedData,\n      hits\n    });\n    this.selectedBox.reset();\n  }\n\n  handleMapMouseUp() {\n    if (!this.lastTap) {\n      this.handleMapTouchEnd();\n    }\n  }\n\n\n  updateViewMapCursorPosition(event) {\n    let {x, y} = this.updateCursorPosition(event, this.viewMapCanvas, this.mapAPI);\n    this.viewMapX = x;\n    this.viewMapY = y;\n  }\n\n  updateMiniMapCursorPosition(event) {\n    let {x, y} = this.updateCursorPosition(event, this.miniMapCanvas, this.miniMapAPI);\n    this.miniMapX = x;\n    this.miniMapY = y;\n  }\n\n  getNewCanvasPairs({getMapRef, getMiniRef}) {\n    return {\n      map: this.generateMapCanvas(getMapRef),\n      minimap: this.generateMiniMapCanvas(getMiniRef)\n    };\n  }\n\n  handleMiniMapMove(event) {\n    this.onMiniMapMove(event);\n  }\n  \n  handleMiniMapClick(event) {\n    let x = this.miniMapX;\n    let y = this.miniMapY;\n    // Handle negative overflows, both numbers should be positive\n    // the reason we divide in 2 is because we want to center the view\n    let calcPanX = Math.max(x - this.viewWidth / 2, 0);\n    let calcPanY = Math.max(y - this.viewHeight / 2, 0);\n\n    // Handle positive overflows, both numbers should not exceed map size\n    let width = this.mapWidth;\n    let height = this.mapHeight;\n\n    calcPanX = calcPanX + this.viewWidth < width ? calcPanX : width - this.viewWidth;\n    calcPanY = calcPanY + this.viewHeight < height ? calcPanY : height - this.viewHeight;\n\n    this.mapAPI.pan(-calcPanX, -calcPanY);\n\n    // draw the minimap square box\n    this.updateMiniMapSquare();\n    this.onMiniMapClick(event);\n  }\n\n  updateMiniMapSquare() {\n    this.miniMapAPI.addRect({\n      id: 'currentMap',\n      x: -this.mapAPI.getPan().panX,\n      y: -this.mapAPI.getPan().panY,\n      width: this.viewWidth,\n      height: this.viewHeight,\n      strokeStyle: 'green',\n      lineWidth: 20\n    });\n  }\n\n  handleMapMouseDown() {\n    if (!this.lastTap) {\n      let now = new Date().getTime();\n      this.dbClick = (now - this.lastClick) < 300;\n      this.lastClick = now;\n      this.isMouseDown = true;\n      this.setSelectBox();\n    }\n  }\n\n  setSelectBox() {\n    this.selectedBox.setStart(this.viewMapX, this.viewMapY);\n    this.selectedBox.setEnd(this.viewMapX, this.viewMapY);\n  }\n\n  handleTouchStart(e) {\n    let {x, y} = this.updateCursorPosition(e.touches[0], this.viewMapCanvas, this.mapAPI);\n    let now = new Date().getTime();\n\n    this.dbTap = (now - this.lastTap) < 300;\n    this.lastTap = now;\n\n    this.viewMapX = x;\n    this.viewMapY = y;\n\n    this.setSelectBox();\n  }\n\n  handleMiniMapTouchStart(e) {\n    let {x, y} = this.updateCursorPosition(e.touches[0], this.miniMapCanvas, this.miniMapAPI);\n\n    this.miniMapX = x;\n    this.miniMapY = y;\n\n    this.handleMiniMapClick();\n  }\n\n\n  handleTouchMove(e) {\n    e.preventDefault();\n    let {x, y} = this.updateCursorPosition(e.touches[0], this.viewMapCanvas, this.mapAPI);\n\n    let calcPanX;\n    let calcPanY;\n    let {panX, panY} = this.mapAPI.getPan();\n\n    let xMoved = x - this.viewMapX;\n    let yMoved = y - this.viewMapY;\n\n    calcPanX = panX + xMoved;\n    calcPanY = panY + yMoved;\n\n    // both numbers should be negative\n    calcPanX = Math.min(calcPanX, 0);\n    calcPanY = Math.min(calcPanY, 0);\n\n    // the panning + the mapSize, should not exceed the viewSize\n    let width = this.mapWidth;\n    let height = this.mapHeight;\n    calcPanX = -calcPanX + this.viewWidth < width ? calcPanX : this.viewWidth - width;\n    calcPanY = -calcPanY + this.viewHeight < height ? calcPanY : this.viewHeight - height;\n\n    this.mapAPI.pan(calcPanX, calcPanY);\n  }\n\n  generateMapCanvas(getRef) {\n    return (\n      <canvas\n        className='viewMap'\n        ref={(el) => {\n          if (!el) {\n            return null;\n          }\n          \n          if (process.env.NODE_ENV === 'test' && !el.removeEventListener) {\n            el = el._reactInternalFiber.child.stateNode; // eslint-disable-line\n          }\n\n          this.viewMapCanvas = el;\n          document.removeEventListener('mousemove', this.updateViewMapCursorPosition);\n          document.addEventListener('mousemove', this.updateViewMapCursorPosition);\n          el.removeEventListener('touchmove', this.handleTouchMove, false);\n          el.addEventListener('touchmove', this.handleTouchMove, false);\n\n          this.mapAPI = new CanvasAPI(el.getContext('2d'));\n          getRef(this.mapAPI, el);\n        }}\n        height={this.viewHeight}\n        width={this.viewWidth}\n        onMouseDown={this.handleMapMouseDown}\n        onTouchStart={this.handleTouchStart}\n        onTouchEnd={this.handleMapTouchEnd}\n        onMouseMove={this.handleMapMouseMove}\n        onMouseUp={this.handleMapMouseUp}\n        onMouseLeave={this.handleMapMouseLeave}\n      ></canvas>\n    );\n  }\n\n  generateMiniMapCanvas(getRef) {\n    return (\n      <canvas\n        className='minimap'\n        ref={(el) => {\n          if (!el) {\n            return null;\n          }\n  \n          if (process.env.NODE_ENV === 'test' && !el.removeEventListener) {\n            el = el._reactInternalFiber.child.stateNode; // eslint-disable-line\n          }\n          \n          this.miniMapCanvas = el;\n          document.removeEventListener('mousemove', this.updateMiniMapCursorPosition);\n          document.addEventListener('mousemove', this.updateMiniMapCursorPosition);\n\n          this.miniMapAPI = new CanvasAPI(el.getContext('2d'));\n\n          // TODO - what? why? is this needed?\n          let key = setInterval(() => {\n            if (this.mapAPI) {\n              this.updateMiniMapSquare();\n              clearInterval(key);\n            }\n          }, 100);\n\n          getRef(this.miniMapAPI, el);\n        }}\n        height={this.mapHeight}\n        width={this.mapWidth}\n        onMouseMove={this.handleMiniMapMove}\n        onMouseDown={this.handleMiniMapClick}\n        onTouchStart={this.handleMiniMapTouchStart}\n      ></canvas>\n    );\n  }\n}\n\nexport default GameCanvas;","import Entity from 'lib/ECS/Entity';\nimport entityLoop from 'lib/ECS/util/entityLoop';\nimport ObjectPool from 'lib/ObjectPool/ObjectPool';\nimport GameCanvas from 'lib/GameCanvas/GameCanvas';\n\nexport default {\n  Entity,\n  entityLoop,\n  ObjectPool,\n  GameCanvas\n};"],"sourceRoot":""}